  version: '3.8'

  services:
    auth-service:
      build: ./auth_service
      container_name: auth-service
      depends_on:
        db:
          condition: service_healthy
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
      ports:
        - "8082:8082"
      networks:
        - app-network

    blogs-service:
      build: ./blogs_service
      container_name: blogs-service
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
        - PROFILE_SERVICE_URL=http://profile-service:8084
      ports:
        - "8081:8081"
      volumes:
        - ./uploads:/app/uploads
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network

    attraction-service:
      build: ./attraction_service
      container_name: attraction-service
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
      ports:
        - "8085:8085"
      volumes:
        - ./uploads:/app/uploads
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network
    review-service:
      build: ./review_service
      container_name: review-service
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
      ports:
        - "8086:8086"
      volumes:
        - ./uploads:/app/uploads
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network
    plan-service:
      build: ./plan_service
      container_name: plan-service
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
      ports:
        - "8087:8087"
      volumes:
        - ./uploads:/app/uploads
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network
    profile-service:
      build: ./profile_service
      container_name: profile_service
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
      ports:
        - "8084:8084"
      volumes:
        - ./uploads:/app/uploads
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network


    events-service:
      build: ./events_service
      container_name: events-service
      environment:
        - DB_HOST=db
        - DB_USER=postgres
        - DB_PASSWORD=123456
        - DB_NAME=TravelApp
        - AUTH_SERVICE_URL=http://auth-service:8082
      volumes:
        - ./uploads/events:/app/uploads/events
      ports:
        - "8083:8083"
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network

    gateway-service:
      build: ./gateway_service
      container_name: gateway-service
      environment:
        - AUTH_SERVICE_URL=http://auth-service:8082
      ports:
        - "8080:8080"
      depends_on:
        - auth-service
        - blogs-service
        - events-service
        - profile-service
      networks:
        - app-network

    favorites-service:
        build: ./fav_service
        container_name: fav-service
        environment:
          - DB_HOST=db
          - DB_USER=postgres
          - DB_PASSWORD=123456
          - DB_NAME=TravelApp
          - AUTH_SERVICE_URL=http://auth-service:8082
        volumes:
          - ./uploads/fav:/app/uploads/fav
        ports:
          - "8088:8088"
        depends_on:
          db:
            condition: service_healthy
        networks:
          - app-network

    db:
      image: postgres:latest
      container_name: postgres-db
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 123456
        POSTGRES_DB: TravelApp
      ports:
        - "5432:5432"
      networks:
        - app-network
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres -d TravelApp"]
        interval: 5s
        timeout: 5s
        retries: 5
        start_period: 10s
      volumes:
        - postgres_data:/var/lib/postgresql/data

  volumes:
    postgres_data:

  networks:
    app-network:
      driver: bridge